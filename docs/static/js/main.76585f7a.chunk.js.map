{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACE,sBAAMC,SATa,SAAAC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCLdG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEtC,OACE,qBAAKC,UAAU,6CAAf,SACE,qBAAKC,IAAKF,EAAKG,IAAKJ,O,uBCNbK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDAEqBO,UAAUF,GAF/B,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXjB,kBAcdY,GAdc,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACRjB,EAAQC,GACLiB,MAAK,SAAAC,GAEJH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAId,CAACb,IAEGc,EDdwBK,CAAanB,GAAhCU,EAF2B,EAEhCJ,KAAaO,EAFmB,EAEnBA,QAEpB,OACE,qCACE,6BAAKb,IAEJa,GAAW,mBAAGjB,UAAU,wCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEGc,EAAOF,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADCA,EAAIhB,aEWN2B,EA1BM,WAAO,IAAD,EAEWzC,mBAAS,CAC3C,UAHuB,mBAElBQ,EAFkB,KAENT,EAFM,KAUzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAECS,EAAWqB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CACEA,SAAUA,GACLA,U,MCjBfqB,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.76585f7a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length>2) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        value={inputValue} \r\n        onChange={handleInputChange} \r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  \r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft\">\r\n      <img src={url} alt={title}/>\r\n      {/* <p>{title}</p> */}\r\n    </div>\r\n  )\r\n}\r\n","export const getGifs = async (category) => {\r\n  const url =\r\n  `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=p4jpmrGfSM0XEfdTPk0mKTcQZeUHO1zX`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};","// import React, { useState, useEffect } from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        \r\n        {images.map(img =>\r\n          <GifGridItem \r\n            key={img.id}\r\n            {...img}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => {\r\n        \r\n        setstate({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n\r\n      })\r\n  }, [category]);\r\n\r\n  return state; // {data:[], loading:true};\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState([\r\n    \"Akira\",\r\n  ]);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories((cats) => [...cats, \"Akira\"]);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr />\r\n\r\n      {categories.map((category) =>\r\n        <GifGrid \r\n          category={category} \r\n          key={category}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}